name: CI/CD Pipeline

on: [push, pull_request]

jobs:
  preparation:
    runs-on: ubuntu-latest
    container: lorisleiva/laravel-docker:latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up PHP
        run: php -v
      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-interaction --no-progress --no-scripts
          cp .env.example .env
          php artisan key:generate
      - name: Cache Composer packages
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install npm dependencies
        run: |
          npm --version
          npm ci
      - name: Cache npm packages
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

  building:
    needs: preparation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'
      - name: Install npm dependencies
        run: npm install
      - name: Build the project
        run: npm run build

  db-seeding:
    needs: preparation
    container: lorisleiva/laravel-docker:latest
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: mysql_db
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v2
      - name: Composer install
        run: |
          composer install --prefer-dist --no-interaction --no-progress --no-scripts
          cp .env.example .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=mysql" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=mysql_db" >> .env
          echo "DB_USERNAME=root" >> .env
          echo "DB_PASSWORD=root" >> .env
          php artisan key:generate
      - name: Wait for MySQL
        run: |
          until nc -z mysql 3306; do
            echo "Waiting for MySQL..."
            sleep 1
          done
      - name: Seed database
        run: |
          mysql --version
          php artisan migrate:fresh --seed --force

  deploy:
    runs-on: ubuntu-latest
    container: lorisleiva/laravel-docker:latest
    needs: [preparation, building, db-seeding]
    steps:
      - uses: actions/checkout@v2
      - name: Composer install
        run: composer install --prefer-dist --no-interaction --no-progress --no-scripts
      - name: Setup SSH
        run: |
          sudo apt-get update -y && sudo apt-get install -y ssh-client
          mkdir -p ~/.ssh && chmod 700 ~/.ssh
          ssh-keyscan -H 37.202.2.195 >> ~/.ssh/known_hosts
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa
        env:
          SSH_PRIVATE_KEY: ${{ secrets.WEBSITE_SSH_PRIVATE_KEY }}
      - name: Deploy to Staging
        if: github.event_name != 'push' || !startsWith(github.ref, 'refs/tags/')
        run: php vendor/bin/dep deploy staging -vvv
      - name: Deploy to Production
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: php vendor/bin/dep deploy production
